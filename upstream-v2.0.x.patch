diff --git a/components/video/VideoPlayerView.bs b/components/video/VideoPlayerView.bs
index 90c48b17..15fc0cca 100644
--- a/components/video/VideoPlayerView.bs
+++ b/components/video/VideoPlayerView.bs
@@ -30,7 +30,7 @@ sub init()
     m.playbackTimer = m.top.findNode("playbackTimer")
     m.bufferCheckTimer = m.top.findNode("bufferCheckTimer")
     m.top.observeField("state", "onState")
-    m.top.observeField("content", "onContentChange")
+    m.top.observeField("position", "onPositionChanged")
     m.top.observeField("selectedSubtitle", "onSubtitleChange")
     m.top.observeField("audioIndex", "onAudioIndexChange")
 
@@ -58,9 +58,25 @@ sub init()
     m.hideNextEpisodeButtonAnimation = m.top.findNode("hideNextEpisodeButton")
 
     m.checkedForNextEpisode = false
+    m.hasNextEpisode = false
     m.getNextEpisodeTask = createObject("roSGNode", "GetNextEpisodeTask")
     m.getNextEpisodeTask.observeField("nextEpisodeData", "onNextEpisodeDataLoaded")
 
+    'Intro Skip button
+    m.skipIntroButton = m.top.findNode("skipIntro")
+    m.skipIntroButton.text = tr("Skip Intro")
+    m.skipIntroButton.visible = false
+    m.skipIntroButton.setFocus(false)
+
+    m.showSkipIntroButtonAnimation = m.top.findNode("showSkipIntroButton")
+    m.hideSkipIntroButtonAnimation = m.top.findNode("hideSkipIntroButton")
+
+    m.checkedForIntro = false
+    m.hasIntro = false
+    m.introPassed = false
+    m.getIntroInfoTask = createObject("roSGNode", "GetIntroInfoTask")
+    m.getIntroInfoTask.observeField("introData", "onIntroDataLoaded")
+
     m.top.retrievingBar.filledBarBlendColor = m.global.constants.colors.blue
     m.top.bufferingBar.filledBarBlendColor = m.global.constants.colors.blue
     m.top.trickPlayBar.filledBarBlendColor = m.global.constants.colors.blue
@@ -493,22 +509,9 @@ sub populateChapterMenu()
     end for
 end sub
 
-' Event handler for when video content field changes
-sub onContentChange()
-    if not isValid(m.top.content) then return
-
-    m.top.observeField("position", "onPositionChanged")
-end sub
-
 sub onNextEpisodeDataLoaded()
     m.checkedForNextEpisode = true
-
-    m.top.observeField("position", "onPositionChanged")
-
-    ' If there is no next episode, disable next episode button
-    if m.getNextEpisodeTask.nextEpisodeData.Items.count() <> 2
-        m.nextupbuttonseconds = 0
-    end if
+    m.hasNextEpisode = m.getNextEpisodeTask.nextEpisodeData.Items.count() = 2
 end sub
 
 '
@@ -546,7 +549,7 @@ end sub
 ' Checks if we need to display the Next Episode button
 sub checkTimeToDisplayNextEpisode()
     if m.top.content.contenttype <> 4 then return ' only display when content is type "Episode"
-    if m.nextupbuttonseconds = 0 then return ' is the button disabled?
+    if not m.hasNextEpisode or m.nextupbuttonseconds = 0 then return ' is the button disabled?
 
     ' Don't show Next Episode button if trickPlayBar is visible
     if m.top.trickPlayBar.visible then return
@@ -572,6 +575,56 @@ sub checkTimeToDisplayNextEpisode()
     end if
 end sub
 
+sub onIntroDataLoaded()
+    m.checkedForIntro = true
+
+    if m.getIntroInfoTask.introData.Valid
+        m.hasIntro = true
+        m.introPromptStartTime = m.getIntroInfoTask.introData.ShowSkipPromptAt
+        m.introPromptEndTime = m.getIntroInfoTask.introData.HideSkipPromptAt
+        m.introSkipTime = m.getIntroInfoTask.introData.IntroEnd
+    end if
+end sub
+
+' Show the Skip Intro button
+sub showSkipIntroButton()
+    if not m.skipIntroButton.visible
+        m.showSkipIntroButtonAnimation.control = "start"
+        m.skipIntroButton.setFocus(true)
+        m.skipIntroButton.visible = true
+    end if
+end sub
+
+' Hide the Skip Intro button
+sub hideSkipIntroButton()
+    if m.skipIntroButton.visible and m.hideSkipIntroButtonAnimation.state = "stopped"
+        m.hideSkipIntroButtonAnimation.control = "start"
+        m.hideSkipIntroButtonAnimation.observeField("state", "hideSkipIntroButtonFinished")
+        m.skipIntroButton.setFocus(false)
+        m.introPassed = true
+        m.top.setFocus(true)
+    end if
+end sub
+
+' Fully hide the Skip Intro button
+sub hideSkipIntroButtonFinished()
+    if m.hideSkipIntroButtonAnimation.state = "stopped"
+        m.skipIntroButton.visible = false
+        m.hideSkipIntroButtonAnimation.unobserveField("state")
+    end if
+end sub
+
+' Checks if we should display the Skip Intro button
+sub checkSkipIntroDisplay()
+    curPos = int(m.top.position)
+    if curPos >= m.introPromptStartTime and curPos <= m.introPromptEndTime and not m.skipIntroButton.visible
+        showSkipIntroButton()
+    else if curPos > m.introPromptEndTime and m.skipIntroButton.visible
+        hideSkipIntroButton()
+        m.introPassed = true
+    end if
+end sub
+
 ' When Video Player state changes
 sub onPositionChanged()
 
@@ -587,9 +640,13 @@ sub onPositionChanged()
     ' Check if dialog is open
     m.dialog = m.top.getScene().findNode("dialogBackground")
     if not isValid(m.dialog)
-        ' Do not show Next Episode button for intro videos
+        ' Do not show Next Episode or Skip Intro button for intro videos
         if not m.LoadMetaDataTask.isIntro
             checkTimeToDisplayNextEpisode()
+
+            if m.hasIntro and not m.introPassed
+                checkSkipIntroDisplay()
+            end if
         end if
     end if
 end sub
@@ -632,6 +689,14 @@ sub onState(msg)
             end if
         end if
 
+        ' Check if intro can be skipped
+        if isValid(m.top.id)
+            if m.top.videoID <> "" and not m.checkedForIntro and m.top.content.contenttype = 4
+                m.getIntroInfoTask.videoID = m.top.id
+                m.getIntroInfoTask.control = "RUN"
+            end if
+        end if
+
         if m.playReported = false
             ReportPlayback("start")
             m.playReported = true
@@ -780,6 +845,19 @@ function onKeyEvent(key as string, press as boolean) as boolean
         end if
     end if
 
+    if key = "OK" and m.skipIntroButton.hasfocus() and not m.top.trickPlayBar.visible
+        m.top.seek = m.introSkipTime
+        hideSkipIntroButton()
+        return true
+    else
+        'Hide Skip Intro Button
+        if m.skipIntroButton.visible or m.skipIntroButton.hasFocus()
+            m.skipIntroButton.visible = false
+            m.skipIntroButton.setFocus(false)
+            m.top.setFocus(true)
+        end if
+    end if
+
     if not press then return false
 
     if key = "down" and not m.top.trickPlayBar.visible
diff --git a/components/video/VideoPlayerView.xml b/components/video/VideoPlayerView.xml
index 2f7b67fe..7745e903 100644
--- a/components/video/VideoPlayerView.xml
+++ b/components/video/VideoPlayerView.xml
@@ -27,6 +27,10 @@
     <field id="fullAudioData" type="array" />
     <field id="audioIndex" type="integer" />
     <field id="allowCaptions" type="boolean" value="false" />
+
+    <field id="introPromptStartTime" type="integer" />
+    <field id="introPromptEndTime" type="integer" />
+    <field id="introSkipTime" type="integer" />
   </interface>
 
   <children>
@@ -49,5 +53,15 @@
     <Animation id="hideNextEpisodeButton" duration=".25" repeat="false" easeFunction="inQuad">
       <FloatFieldInterpolator key="[0.0, 1.0]" keyValue="[.9, 0]" fieldToInterp="nextEpisode.opacity" />
     </Animation>
+
+    <!--note that nextEpisode and skipIntro have the same translation, but since they are shown at opposite ends of an episode, they should not conflict-->
+    <JFButton id="skipIntro" opacity="0" textColor="#f0f0f0" focusedTextColor="#202020" focusFootprintBitmapUri="pkg:/images/option-menu-bg.9.png" focusBitmapUri="pkg:/images/white.9.png" translation="[1500, 900]" />
+    <!--animation for the skip introduction button-->
+    <Animation id="showSkipIntroButton" duration="1.0" repeat="false" easeFunction="inQuad">
+      <FloatFieldInterpolator key="[0.0, 1.0]" keyValue="[0.0, .9]" fieldToInterp="skipIntro.opacity" />
+    </Animation>
+    <Animation id="hideSkipIntroButton" duration=".2" repeat="false" easeFunction="inQuad">
+      <FloatFieldInterpolator key="[0.0, 1.0]" keyValue="[.9, 0]" fieldToInterp="skipIntro.opacity" />
+    </Animation>
   </children>
 </component>
\ No newline at end of file
